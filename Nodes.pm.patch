--- Nodes.pm	2024-09-23 11:43:24.000000000 +0200
+++ /usr/share/perl5/PVE/API2/Nodes.pm	2024-10-01 00:44:45.524469193 +0200
@@ -495,6 +495,46 @@
 	    free => $dinfo->{blocks} - $dinfo->{used},
 	};

+	my %sensors_config = (
+		cputemp => {
+			jsonpath => ['coretemp-isa-0000', 'Package id 0'],
+			valkey => 'temp1_input',
+			critkey => 'temp1_crit',
+		},
+		disktemp => {
+			jsonpath => ['sensor-name-adapter', 'val-input'],
+			valkey => 'temp1_input',
+			critkey => 'temp1_crit',
+		},
+	);
+	my $temp_default_val = 0;
+	my $temp_default_crit = 80;
+
+	my $sensors = eval { decode_json(`sensors -j`); };
+	if (defined($sensors)) {
+		keys %sensors_config;
+		while (my ($k, $v) = each %sensors_config) {
+			if (!defined($v->{jsonpath})) { next; }
+			my $currref = $sensors;
+			my $pathdefined = 1;
+			for my $pathseg (@{$v->{jsonpath}}) {
+				if (defined($currref->{$pathseg})) {
+					$currref = $currref->{$pathseg}
+				} else {
+					$pathdefined = 0;
+					last;
+				}
+			}
+			if (!$pathdefined) { next; }
+			$res->{$k} = {
+				used => defined($v->{valkey}) && defined($currref->{$v->{valkey}})
+					? $currref->{$v->{valkey}} : $temp_default_val,
+				total => defined($v->{critkey}) && defined($currref->{$v->{critkey}})
+					? $currref->{$v->{critkey}} : $temp_default_crit,
+			};
+		}
+	}
+
 	return $res;
     }});
